var search_data = {"index":{"searchIndex":["admincontroller","applicationcontroller","applicationhelper","backendhelper","blacklabhelper","dataformathelper","document","documentscontroller","explore","documentscontroller","interfacecontroller","queriescontroller","query","interfacecontroller","metadatacontroller","metadatahandler","posheadscontroller","postagscontroller","queriescontroller","search","documentscontroller","interfacecontroller","queriescontroller","query","staticpagescontroller","user","whitelabbackend","whitelabexplore","whitelabquery","classmethods","whitelabsearch","add_context_to_group()","add_hits_group()","advanced()","advanced_box()","advanced_column()","advanced_field()","aoh_to_csv()","assemble_url_params()","attribute_is_changed?()","attributes_are_changed?()","audio()","audio_file()","backend_url()","benchmark_test()","bubble()","check_query_import()","columns()","combine_patt_and_within()","content()","context_options()","corpora()","coverage()","cql_info_url()","create_hash()","create_hash()","current_metadatum_label()","current_pos_head_label()","current_pos_tag_label()","db_type()","delete_export_files()","delete_export_files()","do_run()","doc_hits()","docpid_to_id()","docs_in_group()","document()","document()","download()","edit()","execute()","execute_query()","expert()","explore()","export()","export()","extended()","filter_documents()","filter_rule()","filter_xml_to_url_params()","find_from_params()","find_from_params()","find_from_params()","finish_query()","format_for_bubble_chart()","format_for_treemap()","format_percentage()","gap_values_enabled()","gap_values_enabled()","generate_filename()","generate_filename()","get_backend_type()","get_complex_group_from_xml()","get_complex_group_from_xml()","get_content()","get_corpus_document_list()","get_counter_node()","get_document_audio_file()","get_document_content()","get_document_id()","get_document_id_list()","get_document_list()","get_document_metadata()","get_document_sentence_count()","get_document_sentence_starts()","get_document_snippet()","get_document_statistics()","get_document_token_count()","get_document_xml_content()","get_filtered_content()","get_filtered_document_list()","get_filtered_group_composition()","get_filtered_word_count()","get_filters_from_params()","get_group_and_key_from_label()","get_group_options()","get_headers()","get_hoverable_metadata()","get_kwic()","get_labels_from_group_and_key()","get_metadata()","get_metadata_from_server()","get_metadatum()","get_metadatum_by_label()","get_metadatum_values()","get_metadatum_values_by_label()","get_number()","get_offset()","get_pos_head_counts()","get_pos_heads()","get_pos_heads_counted()","get_pos_tag_by_label()","get_pos_tag_features_by_label()","get_pos_tag_types_by_label()","get_pos_tags()","get_quantifier_from_token_xml()","get_query()","get_response_stream()","get_search_result_counts_for_query()","get_token_from_xml()","get_token_value_from_xml()","get_tokens_from_xml()","get_total_word_count()","get_translated_pos_heads()","get_view()","get_within()","group_to_label()","group_translation_key()","growth()","growth()","has_queries?()","has_unfinished_explore_queries?()","has_unfinished_search_queries?()","headers()","help()","history()","history()","hits_in_group()","index()","index()","index()","info()","is_changed?()","is_changed?()","key_translation_key()","kwic()","load_all_languages()","load_available_languages()","load_corpora()","load_info_page_data()","load_page_data()","load_pos_feature_data()","load_pos_feature_keys()","load_pos_feature_value_data()","load_tour()","load_tour_data()","load_translation_data()","load_values()","load_values_from_server()","login()","metadata()","metadata()","metadata()","name()","new()","new()","ngrams()","operator_to_value()","page()","page()","pos_distribution()","pos_distribution()","pos_features()","pos_select_options()","post_headers()","post_query()","query_history()","query_to_url()","query_xml_to_url_params()","query_xml_to_url_params()","reformat_content()","reformat_field_content()","reformat_filters()","reformat_group()","reformat_metadatum_values()","reformat_output()","reformat_phonetic()","reformat_pos_tag()","reformat_query_attributes()","reformat_sentence_content()","reformat_word_content()","remove()","result()","result()","result_file()","result_file()","result_pagination()","run()","run_benchmark_test()","save_info_page()","save_language()","save_languages()","save_metadata()","save_page()","save_tour_data()","search()","search()","selected_group()","set_backend()","set_counter()","set_current_page()","set_document()","set_document()","set_field_values()","set_filter()","set_filtered_amount()","set_grouping()","set_grouping()","set_grouping()","set_limits()","set_limits_and_queries()","set_listtype_options()","set_locale()","set_logged_in()","set_metadata_translation()","set_namespace()","set_option()","set_page()","set_pagination_params()","set_query()","set_query()","set_tab()","set_user()","show()","show()","signin()","signout()","simple()","statistics()","statistics()","statistics()","table_name_prefix()","table_name_prefix()","test()","time_to_seconds()","to_xml()","to_xml()","token_count()","total()","translate()","treemap()","update()","update_from_params()","update_from_params()","update_info_page()","update_language_settings()","update_metadatum()","update_translation()","values()","version()","view_to_path()","vocabulary_growth()","where_data()","where_data()","xml_content()","xml_to_url_params()"],"longSearchIndex":["admincontroller","applicationcontroller","applicationhelper","backendhelper","blacklabhelper","dataformathelper","document","documentscontroller","explore","explore::documentscontroller","explore::interfacecontroller","explore::queriescontroller","explore::query","interfacecontroller","metadatacontroller","metadatahandler","posheadscontroller","postagscontroller","queriescontroller","search","search::documentscontroller","search::interfacecontroller","search::queriescontroller","search::query","staticpagescontroller","user","whitelabbackend","whitelabexplore","whitelabquery","whitelabquery::classmethods","whitelabsearch","search::query::add_context_to_group()","search::query#add_hits_group()","search::interfacecontroller#advanced()","search::interfacecontroller#advanced_box()","search::interfacecontroller#advanced_column()","search::interfacecontroller#advanced_field()","dataformathelper#aoh_to_csv()","whitelabquery#assemble_url_params()","whitelabquery#attribute_is_changed?()","whitelabquery#attributes_are_changed?()","documentscontroller#audio()","document#audio_file()","backendhelper#backend_url()","admincontroller#benchmark_test()","explore::queriescontroller#bubble()","interfacecontroller#check_query_import()","whitelabquery#columns()","blacklabhelper#combine_patt_and_within()","documentscontroller#content()","search::queriescontroller#context_options()","explore::interfacecontroller#corpora()","metadatacontroller#coverage()","backendhelper#cql_info_url()","explore::query::create_hash()","search::query::create_hash()","metadatacontroller#current_metadatum_label()","posheadscontroller#current_pos_head_label()","postagscontroller#current_pos_tag_label()","blacklabhelper#db_type()","explore::query#delete_export_files()","search::query#delete_export_files()","whitelabquery#do_run()","search::queriescontroller#doc_hits()","metadatahandler#docpid_to_id()","search::queriescontroller#docs_in_group()","explore::interfacecontroller#document()","search::interfacecontroller#document()","queriescontroller#download()","metadatacontroller#edit()","whitelabquery#execute()","backendhelper#execute_query()","search::interfacecontroller#expert()","explore::interfacecontroller#explore()","queriescontroller#export()","whitelabquery#export()","search::interfacecontroller#extended()","metadatahandler#filter_documents()","metadatacontroller#filter_rule()","whitelabquery::classmethods#filter_xml_to_url_params()","explore::query::find_from_params()","search::query::find_from_params()","whitelabquery::find_from_params()","blacklabhelper#finish_query()","dataformathelper#format_for_bubble_chart()","dataformathelper#format_for_treemap()","dataformathelper#format_percentage()","backendhelper#gap_values_enabled()","blacklabhelper#gap_values_enabled()","explore::query#generate_filename()","search::query#generate_filename()","whitelabbackend#get_backend_type()","explore::query::get_complex_group_from_xml()","search::query::get_complex_group_from_xml()","document#get_content()","blacklabhelper#get_corpus_document_list()","blacklabhelper#get_counter_node()","blacklabhelper#get_document_audio_file()","blacklabhelper#get_document_content()","metadatahandler#get_document_id()","blacklabhelper#get_document_id_list()","blacklabhelper#get_document_list()","blacklabhelper#get_document_metadata()","blacklabhelper#get_document_sentence_count()","blacklabhelper#get_document_sentence_starts()","blacklabhelper#get_document_snippet()","blacklabhelper#get_document_statistics()","metadatahandler#get_document_token_count()","blacklabhelper#get_document_xml_content()","blacklabhelper#get_filtered_content()","blacklabhelper#get_filtered_document_list()","metadatahandler#get_filtered_group_composition()","metadatahandler#get_filtered_word_count()","metadatacontroller#get_filters_from_params()","metadatahandler#get_group_and_key_from_label()","metadatahandler#get_group_options()","backendhelper#get_headers()","metadatahandler#get_hoverable_metadata()","blacklabhelper#get_kwic()","metadatahandler#get_labels_from_group_and_key()","metadatahandler#get_metadata()","blacklabhelper#get_metadata_from_server()","metadatahandler#get_metadatum()","metadatahandler#get_metadatum_by_label()","metadatahandler#get_metadatum_values()","blacklabhelper#get_metadatum_values_by_label()","backendhelper#get_number()","backendhelper#get_offset()","blacklabhelper#get_pos_head_counts()","backendhelper#get_pos_heads()","blacklabhelper#get_pos_heads_counted()","blacklabhelper#get_pos_tag_by_label()","blacklabhelper#get_pos_tag_features_by_label()","blacklabhelper#get_pos_tag_types_by_label()","blacklabhelper#get_pos_tags()","whitelabquery::classmethods#get_quantifier_from_token_xml()","backendhelper#get_query()","backendhelper#get_response_stream()","backendhelper#get_search_result_counts_for_query()","whitelabquery::classmethods#get_token_from_xml()","whitelabquery::classmethods#get_token_value_from_xml()","whitelabquery::classmethods#get_tokens_from_xml()","metadatahandler#get_total_word_count()","applicationcontroller#get_translated_pos_heads()","backendhelper#get_view()","backendhelper#get_within()","dataformathelper#group_to_label()","dataformathelper#group_translation_key()","document#growth()","document::growth()","user#has_queries?()","user#has_unfinished_explore_queries?()","user#has_unfinished_search_queries?()","backendhelper#headers()","staticpagescontroller#help()","queriescontroller#history()","whitelabquery::classmethods#history()","search::queriescontroller#hits_in_group()","metadatacontroller#index()","posheadscontroller#index()","postagscontroller#index()","staticpagescontroller#info()","explore::query#is_changed?()","search::query#is_changed?()","dataformathelper#key_translation_key()","search::queriescontroller#kwic()","applicationhelper#load_all_languages()","applicationhelper#load_available_languages()","metadatahandler#load_corpora()","applicationhelper#load_info_page_data()","applicationhelper#load_page_data()","applicationhelper#load_pos_feature_data()","applicationhelper#load_pos_feature_keys()","applicationhelper#load_pos_feature_value_data()","applicationcontroller#load_tour()","applicationhelper#load_tour_data()","applicationhelper#load_translation_data()","metadatahandler#load_values()","metadatahandler#load_values_from_server()","admincontroller#login()","document#metadata()","documentscontroller#metadata()","metadatahandler#metadata()","blacklabhelper#name()","metadatahandler::new()","whitelabbackend::new()","explore::interfacecontroller#ngrams()","dataformathelper#operator_to_value()","admincontroller#page()","whitelabquery#page()","document#pos_distribution()","documentscontroller#pos_distribution()","interfacecontroller#pos_features()","interfacecontroller#pos_select_options()","backendhelper#post_headers()","backendhelper#post_query()","user#query_history()","blacklabhelper#query_to_url()","explore::query::query_xml_to_url_params()","search::query::query_xml_to_url_params()","blacklabhelper#reformat_content()","blacklabhelper#reformat_field_content()","blacklabhelper#reformat_filters()","blacklabhelper#reformat_group()","metadatahandler#reformat_metadatum_values()","blacklabhelper#reformat_output()","blacklabhelper#reformat_phonetic()","blacklabhelper#reformat_pos_tag()","blacklabhelper#reformat_query_attributes()","blacklabhelper#reformat_sentence_content()","blacklabhelper#reformat_word_content()","queriescontroller#remove()","queriescontroller#result()","whitelabquery#result()","explore::query#result_file()","search::query#result_file()","queriescontroller#result_pagination()","whitelabquery#run()","blacklabhelper#run_benchmark_test()","applicationhelper#save_info_page()","applicationhelper#save_language()","applicationhelper#save_languages()","metadatahandler#save_metadata()","applicationhelper#save_page()","applicationhelper#save_tour_data()","backendhelper#search()","search::interfacecontroller#search()","whitelabquery#selected_group()","applicationcontroller#set_backend()","applicationcontroller#set_counter()","admincontroller#set_current_page()","whitelabexplore#set_document()","whitelabsearch#set_document()","search::interfacecontroller#set_field_values()","applicationcontroller#set_filter()","applicationcontroller#set_filtered_amount()","explore::queriescontroller#set_grouping()","whitelabexplore#set_grouping()","whitelabsearch#set_grouping()","documentscontroller#set_limits()","queriescontroller#set_limits_and_queries()","explore::interfacecontroller#set_listtype_options()","applicationcontroller#set_locale()","applicationcontroller#set_logged_in()","applicationhelper#set_metadata_translation()","applicationcontroller#set_namespace()","explore::queriescontroller#set_option()","explore::interfacecontroller#set_page()","applicationcontroller#set_pagination_params()","whitelabexplore#set_query()","whitelabsearch#set_query()","applicationcontroller#set_tab()","applicationcontroller#set_user()","posheadscontroller#show()","postagscontroller#show()","admincontroller#signin()","admincontroller#signout()","search::interfacecontroller#simple()","document#statistics()","documentscontroller#statistics()","explore::interfacecontroller#statistics()","explore::table_name_prefix()","search::table_name_prefix()","staticpagescontroller#test()","dataformathelper#time_to_seconds()","explore::query#to_xml()","search::query#to_xml()","document#token_count()","whitelabquery#total()","staticpagescontroller#translate()","explore::queriescontroller#treemap()","metadatacontroller#update()","explore::query#update_from_params()","search::query#update_from_params()","admincontroller#update_info_page()","admincontroller#update_language_settings()","metadatahandler#update_metadatum()","admincontroller#update_translation()","metadatacontroller#values()","blacklabhelper#version()","dataformathelper#view_to_path()","documentscontroller#vocabulary_growth()","explore::query::where_data()","search::query::where_data()","document#xml_content()","whitelabquery::classmethods#xml_to_url_params()"],"info":[["AdminController","","AdminController.html","","<p>Controller for pages in Admin namespace.\n"],["ApplicationController","","ApplicationController.html","","<p>General controller for the application. All other controllers inherit from\nthis.\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>General helper methods. These are available in all the application\ncontrollers and views.\n"],["BackendHelper","","BackendHelper.html","","<p>Main backend helper module.\n"],["BlacklabHelper","","BlacklabHelper.html","","<p>Backend helper specifically for BlackLab Server (inl.github.io/BlackLab/).\n"],["DataFormatHelper","","DataFormatHelper.html","","<p>Data formatting helper methods\n"],["Document","","Document.html","","<p>Module for documents, not persisted to the database\n"],["DocumentsController","","DocumentsController.html","","<p>Controller for retrieval of document data.\n"],["Explore","","Explore.html","","<p>Main module for the Explore namespace\n"],["Explore::DocumentsController","","Explore/DocumentsController.html","","<p>Documents controller for the Explore namespace. It inherits all its methods\nfrom the application documents …\n"],["Explore::InterfaceController","","Explore/InterfaceController.html","","<p>Interface controller for the Explore namespace. It defines the separate\npages in the Explore namespace …\n"],["Explore::QueriesController","","Explore/QueriesController.html","","<p>Queries controller for the Explore namespace. It defines methods that\nreturn the data for the charts …\n"],["Explore::Query","","Explore/Query.html","","<p>Module for Explore Queries, includes WhitelabQuery\n"],["InterfaceController","","InterfaceController.html","","<p>Controller for specific interface elements.\n"],["MetadataController","","MetadataController.html","","<p>Controller for Metadata management from Admin namespace and filtering in\nother namespaces.\n"],["MetadataHandler","","MetadataHandler.html","","<p>The MetadataHandler class handles all document metadata. It calculates the\ncoverage (in tokens) of metadata …\n"],["PosHeadsController","","PosHeadsController.html","","<p>Controller for PoS heads in Admin namespace.\n"],["PosTagsController","","PosTagsController.html","","<p>Controller for PoS tags in Admin namespace.\n"],["QueriesController","","QueriesController.html","","<p>Controller for query related requests.\n"],["Search","","Search.html","","<p>Main module for the Search namespace\n"],["Search::DocumentsController","","Search/DocumentsController.html","","<p>Documents controller for the Search namespace. It inherits all its methods\nfrom the application documents …\n"],["Search::InterfaceController","","Search/InterfaceController.html","","<p>Interface controller for the Search namespace. It defines the separate\npages and page elements in the …\n"],["Search::QueriesController","","Search/QueriesController.html","","<p>Queries controller for the Search namespace. It defines methods that return\nfurther specifications of …\n"],["Search::Query","","Search/Query.html","","<p>Module for Search Queries, includes WhitelabQuery\n"],["StaticPagesController","","StaticPagesController.html","","<p>Controller for all static public pages.\n"],["User","","User.html","","<p>Module for users, identified by HTTP_REMOTE_USER or IP\n"],["WhitelabBackend","","WhitelabBackend.html","","<p>The WhitelabBackend class is a wrapper for the backend helper classes and\nmakes them available in a singleton …\n"],["WhitelabExplore","","WhitelabExplore.html","","<p>Global concern for controllers in the Explore namespace. Defines which\nmethods are executed on each request. …\n"],["WhitelabQuery","","WhitelabQuery.html","","<p>Base module for WhiteLab queries\n"],["WhitelabQuery::ClassMethods","","WhitelabQuery/ClassMethods.html","","<p>Class methods for WhiteLab Queries\n"],["WhitelabSearch","","WhitelabSearch.html","","<p>Global concern for controllers in the Search namespace. Defines which\nmethods are executed on each request. …\n"],["add_context_to_group","Search::Query","Search/Query.html#method-c-add_context_to_group","(group, letter, sets, first, reverse)","<p>Extract the context for a group in query XML definition\n"],["add_hits_group","Search::Query","Search/Query.html#method-i-add_hits_group","(hits_group)","<p>Extract the hits group from a query XML definition\n"],["advanced","Search::InterfaceController","Search/InterfaceController.html#method-i-advanced","()","<p>Load the Advanced Search page\n"],["advanced_box","Search::InterfaceController","Search/InterfaceController.html#method-i-advanced_box","()","<p>Load box for the Advanced Search page\n"],["advanced_column","Search::InterfaceController","Search/InterfaceController.html#method-i-advanced_column","()","<p>Load column for the Advanced Search page\n"],["advanced_field","Search::InterfaceController","Search/InterfaceController.html#method-i-advanced_field","()","<p>Load field for the Advanced Search page\n"],["aoh_to_csv","DataFormatHelper","DataFormatHelper.html#method-i-aoh_to_csv","(aoh)","<p>Convert array of hashes to CSV with header row\n"],["assemble_url_params","WhitelabQuery","WhitelabQuery.html#method-i-assemble_url_params","(only, translations = {})","<p>Create URL parameter string for query with selected properties\n"],["attribute_is_changed?","WhitelabQuery","WhitelabQuery.html#method-i-attribute_is_changed-3F","(attr,param)","<p>Check if a specific attribute&#39;s value in the GET parameters differs\nfrom the value on the query\n"],["attributes_are_changed?","WhitelabQuery","WhitelabQuery.html#method-i-attributes_are_changed-3F","(params)","<p>Check if any values in the GET parameters differ from the values on the\nquery\n"],["audio","DocumentsController","DocumentsController.html#method-i-audio","()","<p>Load document audio\n"],["audio_file","Document","Document.html#method-i-audio_file","(format = 'mp3')","<p>Return the audio file for a document\n"],["backend_url","BackendHelper","BackendHelper.html#method-i-backend_url","()","<p>Get the base URL for querying the backend from the application\nconfiguration\n"],["benchmark_test","AdminController","AdminController.html#method-i-benchmark_test","()","<p>Perform benchmark test (runs 1 query 1,000 times)\n"],["bubble","Explore::QueriesController","Explore/QueriesController.html#method-i-bubble","()","<p>Load bubble chart data for Explore Corpora interface\n"],["check_query_import","InterfaceController","InterfaceController.html#method-i-check_query_import","()","<p>Check the validity of an imported XML query. If the query is valid, a URL\nis constructed for the imported …\n"],["columns","WhitelabQuery","WhitelabQuery.html#method-i-columns","()","<p>Count the number of columns in a query pattern\n"],["combine_patt_and_within","BlacklabHelper","BlacklabHelper.html#method-i-combine_patt_and_within","(query)","<p>Combine the value of the within parameter with the query pattern\n"],["content","DocumentsController","DocumentsController.html#method-i-content","()","<p>Load document content\n"],["context_options","Search::QueriesController","Search/QueriesController.html#method-i-context_options","()","<p>Load context options for a grouped hits query\n"],["corpora","Explore::InterfaceController","Explore/InterfaceController.html#method-i-corpora","()","<p>Load the Explore Corpora page\n"],["coverage","MetadataController","MetadataController.html#method-i-coverage","()","<p>Calculate coverage (token count) of metadata filters\n"],["cql_info_url","BackendHelper","BackendHelper.html#method-i-cql_info_url","()","<p>Get the URL where the CQL definition is hosted. This is added to the CQL\ninfo dialog on the Expert Search …\n"],["create_hash","Explore::Query","Explore/Query.html#method-c-create_hash","(user_id, page, params)","<p>Create a hash to use for the creation of a new query from the current GET\nparameters\n"],["create_hash","Search::Query","Search/Query.html#method-c-create_hash","(user_id, page, params)","<p>Create a hash to use for the creation of a new query from the current GET\nparameters\n"],["current_metadatum_label","MetadataController","MetadataController.html#method-i-current_metadatum_label","()","<p>Set current metadatum\n"],["current_pos_head_label","PosHeadsController","PosHeadsController.html#method-i-current_pos_head_label","()","<p>Set current PoS head\n"],["current_pos_tag_label","PosTagsController","PosTagsController.html#method-i-current_pos_tag_label","()","<p>Set current PoS tag\n"],["db_type","BlacklabHelper","BlacklabHelper.html#method-i-db_type","()","<p>Return the backend identifier\n"],["delete_export_files","Explore::Query","Explore/Query.html#method-i-delete_export_files","()","<p>Delete export files before destroying the query record\n"],["delete_export_files","Search::Query","Search/Query.html#method-i-delete_export_files","()","<p>Delete export files before destroying the query record\n"],["do_run","WhitelabQuery","WhitelabQuery.html#method-i-do_run","(max_count = nil)","<p>Execute a run of the query on the backend\n"],["doc_hits","Search::QueriesController","Search/QueriesController.html#method-i-doc_hits","()","<p>Load hits for the current query in selected document\n"],["docpid_to_id","MetadataHandler","MetadataHandler.html#method-i-docpid_to_id","(docpid)","<p>Convert a document pid (backend) to the corresponding WhiteLab document ID\n"],["docs_in_group","Search::QueriesController","Search/QueriesController.html#method-i-docs_in_group","()","<p>Load documents for the current query in selected group\n"],["document","Explore::InterfaceController","Explore/InterfaceController.html#method-i-document","()","<p>Load the Explore Document page\n"],["document","Search::InterfaceController","Search/InterfaceController.html#method-i-document","()","<p>Load the Document Search page\n"],["download","QueriesController","QueriesController.html#method-i-download","()","<p>Download query result export\n"],["edit","MetadataController","MetadataController.html#method-i-edit","()","<p>Show metadatum edit form\n"],["execute","WhitelabQuery","WhitelabQuery.html#method-i-execute","(threaded = true, max_count = nil)","<p>Execute a query, either in this thread or in a separate thread\n"],["execute_query","BackendHelper","BackendHelper.html#method-i-execute_query","(data)","<p>Execute a query on the backend\n"],["expert","Search::InterfaceController","Search/InterfaceController.html#method-i-expert","()","<p>Load the Expert Search page\n"],["explore","Explore::InterfaceController","Explore/InterfaceController.html#method-i-explore","()","<p>Redirect from /explore to /explore/corpora\n"],["export","QueriesController","QueriesController.html#method-i-export","()","<p>Start query export. If the selected output format is Javascript (.js), then\nthe query results are exported …\n"],["export","WhitelabQuery","WhitelabQuery.html#method-i-export","()","<p>Execute an export of the query results\n"],["extended","Search::InterfaceController","Search/InterfaceController.html#method-i-extended","()","<p>Load the Extended Search page\n"],["filter_documents","MetadataHandler","MetadataHandler.html#method-i-filter_documents","(filter_str, return_indices = true)","<p>Filter document list return_counts = 0: returns document indices in array\nreturn_counts = 1: returns …\n"],["filter_rule","MetadataController","MetadataController.html#method-i-filter_rule","()","<p>Load metadata filter rule\n"],["filter_xml_to_url_params","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-filter_xml_to_url_params","(filter_xml)","<p>Convert the filter section of an XML query definition to URL params\n"],["find_from_params","Explore::Query","Explore/Query.html#method-c-find_from_params","(page, user, params)","<p>Find the current query using the incoming GET parameters\n"],["find_from_params","Search::Query","Search/Query.html#method-c-find_from_params","(page, user, params)","<p>Find the current query using the incoming GET parameters\n"],["find_from_params","WhitelabQuery","WhitelabQuery.html#method-c-find_from_params","(klass, page, user_id, params)","<p>Find the current query using the incoming GET parameters\n"],["finish_query","BlacklabHelper","BlacklabHelper.html#method-i-finish_query","(query, response)","<p>Finish query execution\n"],["format_for_bubble_chart","DataFormatHelper","DataFormatHelper.html#method-i-format_for_bubble_chart","(data, title, filtered_token_count)","<p>Format corpus composition as Highcharts bubble chart\n"],["format_for_treemap","DataFormatHelper","DataFormatHelper.html#method-i-format_for_treemap","(data, title, filtered_token_count)","<p>Format corpus composition as Highcharts treemap\n"],["format_percentage","DataFormatHelper","DataFormatHelper.html#method-i-format_percentage","(pro,d)","<p>Format percentage\n"],["gap_values_enabled","BackendHelper","BackendHelper.html#method-i-gap_values_enabled","()","<p>If gap values are enabled, the &#39;Import TSV&#39; buttons in Expert\nSearch and Explore N-grams are …\n"],["gap_values_enabled","BlacklabHelper","BlacklabHelper.html#method-i-gap_values_enabled","()","<p>If gap values are enabled, the &#39;Import TSV&#39; buttons in Expert\nSearch and Explore N-grams are …\n"],["generate_filename","Explore::Query","Explore/Query.html#method-i-generate_filename","()","<p>Generate filename for download\n"],["generate_filename","Search::Query","Search/Query.html#method-i-generate_filename","()","<p>Generate filename for download\n"],["get_backend_type","WhitelabBackend","WhitelabBackend.html#method-i-get_backend_type","()","<p>Return the identifier from the backend\n"],["get_complex_group_from_xml","Explore::Query","Explore/Query.html#method-c-get_complex_group_from_xml","(query_xml)","<p>Convert the group section of an XML query definition to URL params\n"],["get_complex_group_from_xml","Search::Query","Search/Query.html#method-c-get_complex_group_from_xml","(query_xml)","<p>Convert the group section of an XML query definition to URL params\n"],["get_content","Document","Document.html#method-i-get_content","()","<p>Return a snippet of the total document size for a document\n"],["get_corpus_document_list","BlacklabHelper","BlacklabHelper.html#method-i-get_corpus_document_list","(corpus)","<p>Retrieve the entire list of documents for a specific corpus\n"],["get_counter_node","BlacklabHelper","BlacklabHelper.html#method-i-get_counter_node","()","<p>Get node containing total counts for all node labels in index, not\nimplemented for BlackLab\n"],["get_document_audio_file","BlacklabHelper","BlacklabHelper.html#method-i-get_document_audio_file","(xmlid)","<p>Get the filename of the audio file for a specific document ID\n"],["get_document_content","BlacklabHelper","BlacklabHelper.html#method-i-get_document_content","(xmlid, patt, offset, number)","<p>Retrieve the paginated content for a document ID. The query pattern is\ncurrently not sent to the backend, …\n"],["get_document_id","MetadataHandler","MetadataHandler.html#method-i-get_document_id","(index)","<p>Convert a document index to a WhiteLab document ID\n"],["get_document_id_list","BlacklabHelper","BlacklabHelper.html#method-i-get_document_id_list","(filter)","<p>Retrieve a filtered list of document IDs\n"],["get_document_list","BlacklabHelper","BlacklabHelper.html#method-i-get_document_list","(offset, number)","<p>Retrieve a paginated document list without a query\n"],["get_document_metadata","BlacklabHelper","BlacklabHelper.html#method-i-get_document_metadata","(xmlid)","<p>Retrieve the metadata for a specific document ID\n"],["get_document_sentence_count","BlacklabHelper","BlacklabHelper.html#method-i-get_document_sentence_count","(xmlid)","<p>Get the sentence count for a specific document ID\n"],["get_document_sentence_starts","BlacklabHelper","BlacklabHelper.html#method-i-get_document_sentence_starts","(xmlid, offset, number)","<p>Get all token indices marking sentence starts for a specific document ID\n"],["get_document_snippet","BlacklabHelper","BlacklabHelper.html#method-i-get_document_snippet","(xmlid, hitstart, hitend)","<p>Retrieve a content snippet for a specific document ID\n"],["get_document_statistics","BlacklabHelper","BlacklabHelper.html#method-i-get_document_statistics","(xmlid)","<p>Retrieve simple statistics for a specific document ID\n"],["get_document_token_count","MetadataHandler","MetadataHandler.html#method-i-get_document_token_count","(id)","<p>Retrieve the token count for a specific document ID\n"],["get_document_xml_content","BlacklabHelper","BlacklabHelper.html#method-i-get_document_xml_content","(xmlid)","<p>Retrieve the entire XML contents of a document ID without a query\n"],["get_filtered_content","BlacklabHelper","BlacklabHelper.html#method-i-get_filtered_content","(query)","<p>Retrieve the concatenated contents of a set of filtered documents (for\nvocabulary growth calculation) …\n"],["get_filtered_document_list","BlacklabHelper","BlacklabHelper.html#method-i-get_filtered_document_list","(filter, offset, number)","<p>Retrieve a filtered paginated document list without a query\n"],["get_filtered_group_composition","MetadataHandler","MetadataHandler.html#method-i-get_filtered_group_composition","(option, filter)","<p>Get documents matching metadatum grouped by option value\n"],["get_filtered_word_count","MetadataHandler","MetadataHandler.html#method-i-get_filtered_word_count","(filter)","<p>Retrieve the total token count for a filtered set of documents\n"],["get_filters_from_params","MetadataController","MetadataController.html#method-i-get_filters_from_params","(par)","<p>Get metadata filters from parameter\n"],["get_group_and_key_from_label","MetadataHandler","MetadataHandler.html#method-i-get_group_and_key_from_label","(label)","<p>Convert a concatenated group-key-label back to its original group and key\n"],["get_group_options","MetadataHandler","MetadataHandler.html#method-i-get_group_options","(view, namespace)","<p>Return a translated list of group options for grouped hits/docs\n"],["get_headers","BackendHelper","BackendHelper.html#method-i-get_headers","(data)","<p>Send a request with only headers (no query) to the backend using GET\n"],["get_hoverable_metadata","MetadataHandler","MetadataHandler.html#method-i-get_hoverable_metadata","()","<p>Retrieve all metadata fields that are configured to be shown when hovering\na query result\n"],["get_kwic","BlacklabHelper","BlacklabHelper.html#method-i-get_kwic","(docpid, first_index, last_index, size = 50)","<p>Retrieve a keyword in context\n"],["get_labels_from_group_and_key","MetadataHandler","MetadataHandler.html#method-i-get_labels_from_group_and_key","(group, key)","<p>Retrieve all metadata field labels that match a specific group and key. By\nassigning the same group and …\n"],["get_metadata","MetadataHandler","MetadataHandler.html#method-i-get_metadata","(number, offset, sort, order)","<p>Load paginated list of metadata in index\n"],["get_metadata_from_server","BlacklabHelper","BlacklabHelper.html#method-i-get_metadata_from_server","(number, offset, sort, order)","<p>Retrieve a list of metadata fields from the backend\n"],["get_metadatum","MetadataHandler","MetadataHandler.html#method-i-get_metadatum","(group, key)","<p>Retrieve a metadata field by its group and key\n"],["get_metadatum_by_label","MetadataHandler","MetadataHandler.html#method-i-get_metadatum_by_label","(label)","<p>Retrieve a metadata field by its label\n"],["get_metadatum_values","MetadataHandler","MetadataHandler.html#method-i-get_metadatum_values","(metadatum, filtered_total)","<p>Retrieve the values for a metadata field. If BlackLab is used as the\nbackend, it will return counts only …\n"],["get_metadatum_values_by_label","BlacklabHelper","BlacklabHelper.html#method-i-get_metadatum_values_by_label","(number, offset, sort, order, label)","<p>Load metadatum values by label\n"],["get_number","BackendHelper","BackendHelper.html#method-i-get_number","(query, docpid, number)","<p>Get the value for the number parameter for paginated queries\n"],["get_offset","BackendHelper","BackendHelper.html#method-i-get_offset","(query, docpid, offset)","<p>Get the value for the offset parameter for paginated queries\n"],["get_pos_head_counts","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_head_counts","(head)","<p>Retrieve the frequency of a specific PoS head tag from the backend\n"],["get_pos_heads","BackendHelper","BackendHelper.html#method-i-get_pos_heads","(number, offset, sort, order)","<p>Default method to get a list of PoS head tags\n"],["get_pos_heads_counted","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_heads_counted","(number, offset, sort, order)","<p>Retrieve a list of PoS head tags and their frequencies from the backend\n"],["get_pos_tag_by_label","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_tag_by_label","(label)","<p>Get PoS tag by label\n"],["get_pos_tag_features_by_label","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_tag_features_by_label","(label)","<p>Get PoS tag feature by label\n"],["get_pos_tag_types_by_label","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_tag_types_by_label","(number, offset, sort, order, label)","<p>Get PoS tag type by label\n"],["get_pos_tags","BlacklabHelper","BlacklabHelper.html#method-i-get_pos_tags","(number, offset, sort, order)","<p>Get PoS tags\n"],["get_quantifier_from_token_xml","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-get_quantifier_from_token_xml","(token)","<p>Extract a single token&#39;s quantifier from pattern in query XML\ndefinition\n"],["get_query","BackendHelper","BackendHelper.html#method-i-get_query","(data)","<p>Send a request with both headers and a query to the backend using GET\n"],["get_response_stream","BackendHelper","BackendHelper.html#method-i-get_response_stream","(data, target)","<p>Receive the backend response as a stream\n"],["get_search_result_counts_for_query","BackendHelper","BackendHelper.html#method-i-get_search_result_counts_for_query","(query, docpid, view, number, offset)","<p>Retrieve result counts for a query from the backend\n"],["get_token_from_xml","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-get_token_from_xml","(token)","<p>Extract a single token from pattern in query XML definition\n"],["get_token_value_from_xml","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-get_token_value_from_xml","(token)","<p>Extract a single token&#39;s value from pattern in query XML definition\n"],["get_tokens_from_xml","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-get_tokens_from_xml","(tokens)","<p>Extract all tokens from pattern in query XML definition\n"],["get_total_word_count","MetadataHandler","MetadataHandler.html#method-i-get_total_word_count","()","<p>Return the total word count\n"],["get_translated_pos_heads","ApplicationController","ApplicationController.html#method-i-get_translated_pos_heads","()","<p>Helper method to expose translated PoS heads anywhere in the application\n"],["get_view","BackendHelper","BackendHelper.html#method-i-get_view","(query, docpid, view)","<p>Get the value for the view parameter for a query\n"],["get_within","BackendHelper","BackendHelper.html#method-i-get_within","(query, default)","<p>Get the value for the within parameter for a query\n"],["group_to_label","DataFormatHelper","DataFormatHelper.html#method-i-group_to_label","(group)","<p>Convert group to correct value\n"],["group_translation_key","DataFormatHelper","DataFormatHelper.html#method-i-group_translation_key","(group)","<p>Get translation key for a specific metadata group\n"],["growth","Document","Document.html#method-i-growth","()","<p>Assemble the vocabulary growth data array for a document\n"],["growth","Document","Document.html#method-c-growth","(query)","<p>Assemble the vocabulary growth data array for all documents matching a\nquery\n"],["has_queries?","User","User.html#method-i-has_queries-3F","()","<p>Check whether the current user has executed any queries\n"],["has_unfinished_explore_queries?","User","User.html#method-i-has_unfinished_explore_queries-3F","(limit = 0)","<p>Check if user has unfinished explore queries\n"],["has_unfinished_search_queries?","User","User.html#method-i-has_unfinished_search_queries-3F","(limit = 0)","<p>Check if user has unfinished search queries\n"],["headers","BackendHelper","BackendHelper.html#method-i-headers","()","<p>Return the default headers to be sent to the backend with each request.\n"],["help","StaticPagesController","StaticPagesController.html#method-i-help","()","<p>Load help page\n"],["history","QueriesController","QueriesController.html#method-i-history","()","<p>Show query history\n"],["history","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-history","(user_id, hist_offset = 0, hist_number = 5)","<p>Retrieve namespaced query history for a specific user ID\n"],["hits_in_group","Search::QueriesController","Search/QueriesController.html#method-i-hits_in_group","()","<p>Load hits for the current query in selected group\n"],["index","MetadataController","MetadataController.html#method-i-index","()","<p>Show list of available metadata\n"],["index","PosHeadsController","PosHeadsController.html#method-i-index","()","<p>Show list of available PoS heads\n"],["index","PosTagsController","PosTagsController.html#method-i-index","()","<p>Show list of available PoS tags\n"],["info","StaticPagesController","StaticPagesController.html#method-i-info","()","<p>Load info page\n"],["is_changed?","Explore::Query","Explore/Query.html#method-i-is_changed-3F","(page, params)","<p>Check if the currently requested query differs from the currently selected\nquery\n"],["is_changed?","Search::Query","Search/Query.html#method-i-is_changed-3F","(page, params)","<p>Check if the currently requested query differs from the currently selected\nquery\n"],["key_translation_key","DataFormatHelper","DataFormatHelper.html#method-i-key_translation_key","(key)","<p>Get translation key for a specific metadata key\n"],["kwic","Search::QueriesController","Search/QueriesController.html#method-i-kwic","()","<p>Load keywords in context for hit\n"],["load_all_languages","ApplicationHelper","ApplicationHelper.html#method-i-load_all_languages","()","<p>Load list of all languages\n"],["load_available_languages","ApplicationHelper","ApplicationHelper.html#method-i-load_available_languages","()","<p>Load translation data for all languages\n"],["load_corpora","MetadataHandler","MetadataHandler.html#method-i-load_corpora","()","<p>Load the names of the available corpora\n"],["load_info_page_data","ApplicationHelper","ApplicationHelper.html#method-i-load_info_page_data","()","<p>Load translated info page content from configuration file\n"],["load_page_data","ApplicationHelper","ApplicationHelper.html#method-i-load_page_data","(page)","<p>Load translated page content from configuration file\n"],["load_pos_feature_data","ApplicationHelper","ApplicationHelper.html#method-i-load_pos_feature_data","(pos)","<p>Load all PoS feature definitions\n"],["load_pos_feature_keys","ApplicationHelper","ApplicationHelper.html#method-i-load_pos_feature_keys","()","<p>Load all unique PoS feature keys\n"],["load_pos_feature_value_data","ApplicationHelper","ApplicationHelper.html#method-i-load_pos_feature_value_data","(f)","<p>Load unique values for a specific PoS feature key\n"],["load_tour","ApplicationController","ApplicationController.html#method-i-load_tour","()","<p>Load the translated intructions for the site tour\n"],["load_tour_data","ApplicationHelper","ApplicationHelper.html#method-i-load_tour_data","()","<p>Load translated site tour content from configuration file\n"],["load_translation_data","ApplicationHelper","ApplicationHelper.html#method-i-load_translation_data","()","<p>Load data for label and keys translations\n"],["load_values","MetadataHandler","MetadataHandler.html#method-i-load_values","(metadatum)","<p>Retrieve the unique values and their frequencies for a metadata field\n"],["load_values_from_server","MetadataHandler","MetadataHandler.html#method-i-load_values_from_server","(number, offset, sort, order, group, key)","<p>Retrieve the unique values for a metadata field from the backend\n"],["login","AdminController","AdminController.html#method-i-login","()","<p>Load login page\n"],["metadata","Document","Document.html#method-i-metadata","()","<p>Retrieve the document metadata from the backend\n"],["metadata","DocumentsController","DocumentsController.html#method-i-metadata","()","<p>Load document metadata\n"],["metadata","MetadataHandler","MetadataHandler.html#method-i-metadata","()","<p>Return the total metadata configuration\n"],["name","BlacklabHelper","BlacklabHelper.html#method-i-name","()","<p>Get human readable name of backend\n"],["new","MetadataHandler","MetadataHandler.html#method-c-new","()","<p>Initialize the metadata handler\n"],["new","WhitelabBackend","WhitelabBackend.html#method-c-new","()","<p>Initialize the backend\n"],["ngrams","Explore::InterfaceController","Explore/InterfaceController.html#method-i-ngrams","()","<p>Load the Explore N-grams page\n"],["operator_to_value","DataFormatHelper","DataFormatHelper.html#method-i-operator_to_value","(op)","<p>Convert operator to value string\n"],["page","AdminController","AdminController.html#method-i-page","()","<p>Load admin page\n"],["page","WhitelabQuery","WhitelabQuery.html#method-i-page","()","<p>Return the specific interface page to display the query on\n"],["pos_distribution","Document","Document.html#method-i-pos_distribution","()","<p>Retrieve the distribution of PoS tags for a document\n"],["pos_distribution","DocumentsController","DocumentsController.html#method-i-pos_distribution","()","<p>Load distribution of PoS tags in document\n"],["pos_features","InterfaceController","InterfaceController.html#method-i-pos_features","()","<p>Load values for PoS feature selection dropdown\n"],["pos_select_options","InterfaceController","InterfaceController.html#method-i-pos_select_options","()","<p>Load values for PoS selection dropdown\n"],["post_headers","BackendHelper","BackendHelper.html#method-i-post_headers","(data)","<p>Send a request with only headers (no query) to the backend using POST\n"],["post_query","BackendHelper","BackendHelper.html#method-i-post_query","(data)","<p>Send a request with both headers and a query to the backend using POST\n"],["query_history","User","User.html#method-i-query_history","(query_method, ql = 5)","<p>Load query history\n"],["query_to_url","BlacklabHelper","BlacklabHelper.html#method-i-query_to_url","(query)","<p>Get the base URL for a query based on the selected view\n"],["query_xml_to_url_params","Explore::Query","Explore/Query.html#method-c-query_xml_to_url_params","(query_xml)","<p>Convert a query XML definition to URL parameters for query execution\n"],["query_xml_to_url_params","Search::Query","Search/Query.html#method-c-query_xml_to_url_params","(query_xml)","<p>Convert a query XML definition to URL parameters for query execution\n"],["reformat_content","BlacklabHelper","BlacklabHelper.html#method-i-reformat_content","(xmlid, data)","<p>Reformat BlackLab content output to match the format expected by WhiteLab\n"],["reformat_field_content","BlacklabHelper","BlacklabHelper.html#method-i-reformat_field_content","(obj, field, token)","<p>Reformat BlackLab field content output to match the format expected by\nWhiteLab\n"],["reformat_filters","BlacklabHelper","BlacklabHelper.html#method-i-reformat_filters","(filters)","<p>Reformat filters to BlackLab format (filter:value)\n"],["reformat_group","BlacklabHelper","BlacklabHelper.html#method-i-reformat_group","(group)","<p>Reformat group to BlackLab format\n"],["reformat_metadatum_values","MetadataHandler","MetadataHandler.html#method-i-reformat_metadatum_values","(metadatum)","<p>Reformat a metadata field\n"],["reformat_output","BlacklabHelper","BlacklabHelper.html#method-i-reformat_output","(response, key, query)","<p>Reformat BlackLab Server output to match the format expected by WhiteLab\n"],["reformat_phonetic","BlacklabHelper","BlacklabHelper.html#method-i-reformat_phonetic","(phonetic)","<p>Reformat phonetic to BlackLab format\n"],["reformat_pos_tag","BlacklabHelper","BlacklabHelper.html#method-i-reformat_pos_tag","(pos)","<p>Reformat PoS to BlackLab format\n"],["reformat_query_attributes","BlacklabHelper","BlacklabHelper.html#method-i-reformat_query_attributes","(query)","<p>Reformat the WhiteLab query parameters to match BlackLab parameters\n"],["reformat_sentence_content","BlacklabHelper","BlacklabHelper.html#method-i-reformat_sentence_content","(xmlid, sentence, token_index)","<p>Reformat BlackLab sentence content output to match the format expected by\nWhiteLab\n"],["reformat_word_content","BlacklabHelper","BlacklabHelper.html#method-i-reformat_word_content","(obj)","<p>Reformat BlackLab word content output to match the format expected by\nWhiteLab\n"],["remove","QueriesController","QueriesController.html#method-i-remove","()","<p>Remove query from the query history\n"],["result","QueriesController","QueriesController.html#method-i-result","()","<p>Show query result\n"],["result","WhitelabQuery","WhitelabQuery.html#method-i-result","(threaded = true)","<p>Get the query result, either from the output attribute or from the backend\n"],["result_file","Explore::Query","Explore/Query.html#method-i-result_file","(tsv = false)","<p>Return the path to the query export file\n"],["result_file","Search::Query","Search/Query.html#method-i-result_file","(tsv = false)","<p>Return the path to the query export file\n"],["result_pagination","QueriesController","QueriesController.html#method-i-result_pagination","()","<p>Load query result pagination\n"],["run","WhitelabQuery","WhitelabQuery.html#method-i-run","()","<p>Run query\n"],["run_benchmark_test","BlacklabHelper","BlacklabHelper.html#method-i-run_benchmark_test","(cql,iterations)","<p>Run CQL query on server for set amount of iterations, not implemented for\nBlackLab\n"],["save_info_page","ApplicationHelper","ApplicationHelper.html#method-i-save_info_page","(lang_obj)","<p>Save info page translation to configuration file\n"],["save_language","ApplicationHelper","ApplicationHelper.html#method-i-save_language","(lang_obj)","<p>Save translation data for a specific language to the appropriate\nconfiguration file\n"],["save_languages","ApplicationHelper","ApplicationHelper.html#method-i-save_languages","()","<p>Save translation data for all languages\n"],["save_metadata","MetadataHandler","MetadataHandler.html#method-i-save_metadata","()","<p>Save the current metadata configuration to file\n"],["save_page","ApplicationHelper","ApplicationHelper.html#method-i-save_page","(page, lang_obj)","<p>Save page translation to configuration file\n"],["save_tour_data","ApplicationHelper","ApplicationHelper.html#method-i-save_tour_data","(tour_data)","<p>Save site tour translation to configuration file\n"],["search","BackendHelper","BackendHelper.html#method-i-search","(query, url)","<p>Execute a search on the backend\n"],["search","Search::InterfaceController","Search/InterfaceController.html#method-i-search","()","<p>Redirect from /search to /search/expert (with CQL query) or /search/simple\n(without CQL query)\n"],["selected_group","WhitelabQuery","WhitelabQuery.html#method-i-selected_group","()","<p>Return the selected viewgroup of a query\n"],["set_backend","ApplicationController","ApplicationController.html#method-i-set_backend","()","<p>Initialize backend services\n"],["set_counter","ApplicationController","ApplicationController.html#method-i-set_counter","()","<p>If Neo4j is used for the backend, then load its counter node\n"],["set_current_page","AdminController","AdminController.html#method-i-set_current_page","()","<p>Set current active page\n"],["set_document","WhitelabExplore","WhitelabExplore.html#method-i-set_document","()","<p>Set current document\n"],["set_document","WhitelabSearch","WhitelabSearch.html#method-i-set_document","()","<p>Set current document\n"],["set_field_values","Search::InterfaceController","Search/InterfaceController.html#method-i-set_field_values","()","<p>Get field values from parameters\n"],["set_filter","ApplicationController","ApplicationController.html#method-i-set_filter","()","<p>Get selected metadata filter from parameters\n"],["set_filtered_amount","ApplicationController","ApplicationController.html#method-i-set_filtered_amount","()","<p>Calculate the number of tokens based on the selected metadata filter\n"],["set_grouping","Explore::QueriesController","Explore/QueriesController.html#method-i-set_grouping","()","<p>Get grouping options for grouped hits or documents, depending on selected\nview\n"],["set_grouping","WhitelabExplore","WhitelabExplore.html#method-i-set_grouping","()","<p>Set current group based on the current query or, if no query is selected,\nthe GET parameters\n"],["set_grouping","WhitelabSearch","WhitelabSearch.html#method-i-set_grouping","()","<p>Get grouping options for grouped hits or documents, depending on selected\nview\n"],["set_limits","DocumentsController","DocumentsController.html#method-i-set_limits","()","<p>Get offset and number for selecting document content partitions from the\nGET parameters\n"],["set_limits_and_queries","QueriesController","QueriesController.html#method-i-set_limits_and_queries","()","<p>Set the limits for listing queries in the query history table\n"],["set_listtype_options","Explore::InterfaceController","Explore/InterfaceController.html#method-i-set_listtype_options","()","<p>Get translated list type options\n"],["set_locale","ApplicationController","ApplicationController.html#method-i-set_locale","()","<p>Set the current locale based on the user&#39;s preferences or the default\n"],["set_logged_in","ApplicationController","ApplicationController.html#method-i-set_logged_in","()","<p>Check if current user is logged in as admin\n"],["set_metadata_translation","ApplicationHelper","ApplicationHelper.html#method-i-set_metadata_translation","(ldata, key, value)","<p>Set a translation for a specific metadata field\n"],["set_namespace","ApplicationController","ApplicationController.html#method-i-set_namespace","()","<p>Set the current namespace\n"],["set_option","Explore::QueriesController","Explore/QueriesController.html#method-i-set_option","()","<p>Get selected option for chart\n"],["set_page","Explore::InterfaceController","Explore/InterfaceController.html#method-i-set_page","()","<p>Set current page\n"],["set_pagination_params","ApplicationController","ApplicationController.html#method-i-set_pagination_params","(default_offset, default_number, default_sort_key)","<p>Set parameters for pagination\n"],["set_query","WhitelabExplore","WhitelabExplore.html#method-i-set_query","()","<p>Set current query\n"],["set_query","WhitelabSearch","WhitelabSearch.html#method-i-set_query","()","<p>Set current query\n"],["set_tab","ApplicationController","ApplicationController.html#method-i-set_tab","()","<p>Set current tab\n"],["set_user","ApplicationController","ApplicationController.html#method-i-set_user","()","<p>Set the current user\n"],["show","PosHeadsController","PosHeadsController.html#method-i-show","()","<p>Show PoS head properties\n"],["show","PosTagsController","PosTagsController.html#method-i-show","()","<p>Show PoS tag properties\n"],["signin","AdminController","AdminController.html#method-i-signin","()","<p>Sign in to admin\n"],["signout","AdminController","AdminController.html#method-i-signout","()","<p>Sign out of admin\n"],["simple","Search::InterfaceController","Search/InterfaceController.html#method-i-simple","()","<p>Load the Simple Search page\n"],["statistics","Document","Document.html#method-i-statistics","()","<p>Return simple document statistics\n"],["statistics","DocumentsController","DocumentsController.html#method-i-statistics","()","<p>Load document statistics\n"],["statistics","Explore::InterfaceController","Explore/InterfaceController.html#method-i-statistics","()","<p>Load the Explore Statistics page\n"],["table_name_prefix","Explore","Explore.html#method-c-table_name_prefix","()","<p>Prefix all tables in this namespace with &#39;explore_&#39;\n"],["table_name_prefix","Search","Search.html#method-c-table_name_prefix","()","<p>Prefix all tables in this namespace with &#39;search_&#39;\n"],["test","StaticPagesController","StaticPagesController.html#method-i-test","()","<p>Load test page\n"],["time_to_seconds","DataFormatHelper","DataFormatHelper.html#method-i-time_to_seconds","(t)","<p>Convert timestamp to seconds\n"],["to_xml","Explore::Query","Explore/Query.html#method-i-to_xml","()","<p>Convert a query to an XML definition for download\n"],["to_xml","Search::Query","Search/Query.html#method-i-to_xml","()","<p>Convert a query to an XML definition for download\n"],["token_count","Document","Document.html#method-i-token_count","()","<p>Retrieve the token count of a document\n"],["total","WhitelabQuery","WhitelabQuery.html#method-i-total","()","<p>Return the query total based on the selected view\n"],["translate","StaticPagesController","StaticPagesController.html#method-i-translate","()","<p>Translate key\n"],["treemap","Explore::QueriesController","Explore/QueriesController.html#method-i-treemap","()","<p>Load treemap data for Explore Corpora interface\n"],["update","MetadataController","MetadataController.html#method-i-update","()","<p>Update metadatum properties\n"],["update_from_params","Explore::Query","Explore/Query.html#method-i-update_from_params","(params)","<p>Update the currently selected query to match the currently requested query\n"],["update_from_params","Search::Query","Search/Query.html#method-i-update_from_params","(params)","<p>Update the currently selected query to match the currently requested query\n"],["update_info_page","AdminController","AdminController.html#method-i-update_info_page","()","<p>Save info page translation to configuration file\n"],["update_language_settings","AdminController","AdminController.html#method-i-update_language_settings","()","<p>Update page translations to user selected language\n"],["update_metadatum","MetadataHandler","MetadataHandler.html#method-i-update_metadatum","(metadatum, updates)","<p>Update the configuration of a single metadata field\n"],["update_translation","AdminController","AdminController.html#method-i-update_translation","()","<p>Save key or label translation to configuration file\n"],["values","MetadataController","MetadataController.html#method-i-values","()","<p>Load metadatum values by group and key\n"],["version","BlacklabHelper","BlacklabHelper.html#method-i-version","()","<p>Get the current version of the backend. This will be implemented in\nBlackLab Server 1.6.0.\n"],["view_to_path","DataFormatHelper","DataFormatHelper.html#method-i-view_to_path","(view)","<p>Convert view to search path for the backend\n"],["vocabulary_growth","DocumentsController","DocumentsController.html#method-i-vocabulary_growth","()","<p>Load vocabulary growth for document\n"],["where_data","Explore::Query","Explore/Query.html#method-c-where_data","(user_id, page, params)","<p>Create a hash to use for the selection of an existing query from the\ncurrent GET parameters\n"],["where_data","Search::Query","Search/Query.html#method-c-where_data","(user_id, page, params)","<p>Create a hash to use for the selection of an existing query from the\ncurrent GET parameters\n"],["xml_content","Document","Document.html#method-i-xml_content","()","<p>Retrieve the XML content of a document\n"],["xml_to_url_params","WhitelabQuery::ClassMethods","WhitelabQuery/ClassMethods.html#method-i-xml_to_url_params","(xml)","<p>Convert a query XML definition to URL parameters for query execution\n"]]}}